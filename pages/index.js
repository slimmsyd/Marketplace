import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import Web3modal from 'web3modal';
import {ethers, providers, Contract} from "ethers"
import web3 from 'web3';
import { NFT_ADDRESS, MARKET_ADDRESS, NFT_ADDRESS_ABI, MARKET_ADDRESS_ABI } from '../constants';
import {useState, useEffect, useRef} from 'react';  
import Nav from './Nav';
import axios from 'axios';
import Web3 from 'web3';

export default function Home() {
  //Call smart contract and fetch array and update nfts on load
  const [nfts,setNfts] = useState([])
  //using loaded state, to show or HIDE UI to keep up with where the app currently is in life cycle
  const [loading, setLoading] = useState("not-loaded");
  const [walletConnect, setWalletConnected] = useState(false);
  const [accountAddress, setAccountAddress] = useState(" ")
  const web3modalref = useRef();
  useEffect(() => { 
    if(!walletConnect) { 
      web3modalref.current = new Web3modal({
        network: "matic",
        providerOptions: {},
        disableInjectedProvider: false,
      })
    }

    loadNFTS();

  },[])

  const getProviderOrSigner = async(needSigner = false) => { 
    const provider = await web3modalref.current.connect();
    const web3provider = new providers.Web3Provider(provider);

    const signer =  web3provider.getSigner();
    const address = await signer.getAddress()
    setAccountAddress(address)
    console.log(address)
    const {chainId} = await web3provider.getNetwork();
    if (chainId !== 80001) { 
        window.alert("You are on the wrong Network")
    }



    if(needSigner) { 
      const signer = web3provider.getSigner();
      return signer
    }
    return web3provider;
  }


  //function loads nfts 
  async function loadNFTS() {
    //read operation dont need to know anyting about user
      // const provider = new ethers.providers.JsonRpcProvider("https://rpc-mumbai.maticvigil.com")
      const provider = await getProviderOrSigner(true);
      const marketContract = new Contract(MARKET_ADDRESS,MARKET_ADDRESS_ABI,provider);

    //fetch all the unsold marketItems by calling function from contract
    const data = await marketContract.fetchMarketItems();
    
    //map over all of those items 
    const items = await Promise.all(data.map(async i => { 
      //call the token contract 
      const tokenURI = await marketContract.tokenURI(i.tokenId);
      const meta = await axios.get(tokenURI) //https://ifps.... 
      //create a value for price 
      let price = ethers.utils.formatUnits(i.price.toString(), "ether"); //place it in a value we can use 
      let item = { 
        price, 
        tokenId: i.tokenId.toNumber(),
        seller: i.seller,
        owner: i.owner,
        image: meta.data.image,
        name: meta.data.name,
        description: meta.data.description
      };
      return item
    }))
    setNfts(items);
    setLoading("loaded");
    
  }
const returnItems = () => { 
  if(loading === "loaded" && !nfts.length) return (<h1 className ="heading1">No items in marketplace</h1>)

}

async function buyNFT(nft) { 
  const provider = await getProviderOrSigner(true);
  const signer = await provider.getSigner();
  const contract = new ethers.Contract( MARKET_ADDRESS,MARKET_ADDRESS_ABI,signer);

  const price = ethers.utils.parseUnits(nft.price.toString(), "ether");
  //create the marketsale
  const transaction = await contract.createMarketSale(NFT_ADDRESS, nft.tokenId, {value: price})
  await transaction.wait();
  //reload the screen
  loadNFTS(); //loadNFts should have 1 less NFTS since one is sold 
  

}


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


    <Nav />

      <main >
        <div className = "main">
            <div className = "subMain">
              <header>
                <h1>By The People</h1>
                <h1>For The Culture</h1>

                <p id ="headerText">Culture Marketplace is an <span id ="colorYellow">black-owned</span>, community-first NFT marketplace dedicated to uplifiting and educating the black-community.
                </p>
                <p>Explore The Market And Get Started!</p>
              </header>   
            
              <div className = "trendingImage">
                  <div id ="imageComponent">
                    <span >Trending</span>
                  </div>
                  <div className = "imageHolder">
                  <Image class ="imageMain" src = "/NftMarketPlacePick.jpg" width={400} height = {400} layout = {'fixed'}></Image>
                  </div>
                

                    <div className = "badgeTopShelfInfo">
                      <span id = "offer">Collection Info</span>
                      <span id = "offer">Top Offer</span>
                    </div>
                    <div className = "badgeTopShelfInfo">
                      <span>Collection ID</span>
                      <span>10</span>
                    </div>

            </div>
        </div>
        </div>  
      </main>

    <section className = "displayNFTS">
        <h2>Top Collections</h2>

        <div className = "flex">
          <div className = "flex_Inner">
            <div className = "grid_Inner">
               { returnItems()}
              {/* MAP OVER NFTS */}
              {
               
                nfts.map((nft, i) => { 
                  <div key ={i} className ="nftsMap"> 
                      <img src = {nft.image}></img>
                      <div className = "nft_Name"> 
                        <p>{nft.name}</p>
                      </div>
                      <div className = "nft_Description">
                          <p>{nft.description} hello</p>
                        </div>

                      <div className = "">
                        <p className = "">{nft_price} Matic</p>
                        <button onClick={buyNFT(nft)} className = "btn">
                          Buy
                        </button> 
                      </div>
                </div>
                  
                //  Display the Prie and able to purchase 
              

                })
              }
            </div>
          </div>
        </div>

    </section>


    </div>
  )
}
